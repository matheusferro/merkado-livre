plugins {
    id("org.jetbrains.kotlin.jvm") version "1.4.32"
    id("org.jetbrains.kotlin.kapt") version "1.4.32"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.5.0"
    id("com.google.protobuf") version "0.8.15"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.5.10"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.5.10"
}

noArg {
    annotation("javax.persistence.Entity")
}

version = "0.1"
group = "com.merkadoLivreGrpc"

repositories {
    mavenCentral()
}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.merkadoLivreGrpc.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.grpc:micronaut-grpc-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("io.micronaut:micronaut-http-client")

    //jpa
    annotationProcessor("io.micronaut.data:micronaut-data-processor:2.4.3")
    //implementation("io.micronaut:micronaut-inject-java:2.5.5")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    testImplementation("com.h2database:h2")
    implementation("org.postgresql:postgresql:42.2.20")
    implementation("org.springframework.security:spring-security-crypto:5.5.0")
    compile("commons-logging:commons-logging:1.1.1")
    //aws
    implementation("software.amazon.awssdk:sqs:2.16.86")
    implementation("software.amazon.awssdk:sns:2.16.86")
    implementation("com.amazonaws:aws-java-sdk-dynamodb:1.12.9")

}


application {
    mainClass.set("com.merkadoLivreGrpc.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }


}
sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.14.0" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.33.1" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
